name: Terraform Deployment

on:
  push:
    branches: [main]

env:
  ARM_CLIENT_ID:       ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET:   ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID:       ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  LOCATION:            swedencentral
  RESOURCE_GROUP:      terrabicep
  # These are still defined for later use if needed
  KV_NAME:             terrabicep-kv-cloud23
  KV_SECRET_NAME:      vm-password

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Verify SP Secret Exists
        run: |
          if [ -z "$ARM_CLIENT_SECRET" ]; then
            echo "❌ ARM_CLIENT_SECRET is empty!"
            exit 1
          else
            echo "✅ ARM_CLIENT_SECRET is set (length: ${#ARM_CLIENT_SECRET})"
          fi

      - name: Azure CLI login as Service Principal
        uses: azure/cli@v1
        with:
          inlineScript: |
            az login --service-principal \
              --username $ARM_CLIENT_ID \
              --password="$ARM_CLIENT_SECRET" \
              --tenant $ARM_TENANT_ID
            az account set --subscription $ARM_SUBSCRIPTION_ID

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Debug Key Vault Variables
        run: |
          echo "KV_NAME:       '$KV_NAME'"
          echo "KV_SECRET_NAME:'$KV_SECRET_NAME'"

      - name: Get SSH key from Key Vault (hard-coded for debug)
        run: |
          AZ_KV_NAME="terrabicep-kv-cloud23"
          AZ_KV_SECRET="vm-password"
          echo "Running: az keyvault secret show --vault-name $AZ_KV_NAME --name $AZ_KV_SECRET"
          SSH_KEY=$(az keyvault secret show \
            --vault-name $AZ_KV_NAME \
            --name $AZ_KV_SECRET \
            --query value -o tsv)
          echo "::add-mask::$SSH_KEY"
          echo "TF_VAR_ssh_public_key=$SSH_KEY"             >> $GITHUB_ENV
          echo "TF_VAR_location=$LOCATION"                 >> $GITHUB_ENV
          echo "TF_VAR_resource_group_name=$RESOURCE_GROUP" >> $GITHUB_ENV
          echo "TF_VAR_subscription_id=$ARM_SUBSCRIPTION_ID" >> $GITHUB_ENV

      - name: Terraform Init & Apply with timing
        working-directory: terraform
        run: |
          echo "Starting Terraform at $(date)"
          time terraform init \
            -backend-config="resource_group_name=${RESOURCE_GROUP}" \
            -backend-config="storage_account_name=terrabicepstate" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=terraform.tfstate"
          time terraform apply -auto-approve \
            -var="subscription_id=$ARM_SUBSCRIPTION_ID" \
            -var="client_id=$ARM_CLIENT_ID" \
            -var="client_secret=$ARM_CLIENT_SECRET" \
            -var="tenant_id=$ARM_TENANT_ID" \
            -var="location=$LOCATION" \
            -var="resource_group_name=$RESOURCE_GROUP" \
            -var="kv_name=$AZ_KV_NAME" \
            -var="kv_secret_name=$AZ_KV_SECRET"
          echo "Finished Terraform at $(date)"
